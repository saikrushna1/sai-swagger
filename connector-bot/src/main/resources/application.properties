
##Scheduler Properties

#New Job Process Interval
newJobInterval=5000

#Remote Agent Jobs Process Interval
remoteJobInterval=5000

#Retry Job Interval
reTryJobInterval=5000

#RemoteAgent Script Upload URL
agent.scriptUploadUrl=/agent/api/executescript


spring.http.multipart.max-file-size=500MB
spring.http.multipart.max-request-size=500MB

#RemoteAgent PORT
agent.port=9777


#scripts Directory
scripts.dir=/Users/ranganathvasan/project/learning/testbot/connector-bot/scripts/

#excludingPattern keys
excludingPattern: ember;mn_;relocdest;BPR_;w-pmi-item;w-pmi-hover;Ariba_login_Splash_image_IES;awmousedown;awmouseup

#cobot URL
cobot.url: http://localhost:8080/

#Call back URL for status update
cobot.status.callback.url=http://localhost:8080/api/job/updatestatus

#Web playback scripts from SSM
cobot.createconnectionjson.url=http://localhost:8080/api/job/createjob

#CLI playback scripts from SSM
cobot.cliRecordconnectionJSONUrl.url=http://localhost:8080/api/job/cli/run

#DESKTOP playback scripts from SSM
cobot.desktopRecordconnectionJSONUrl.url=http://localhost:8080/api/job/desktop/run

## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
spring.datasource.url = jdbc:mysql://localhost:3306/testbot?autoReconnect=true&useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true&useSSL=false&createDatabaseIfNotExist=true
spring.datasource.username = root
spring.datasource.password = root

app.jwt.secret=d828aba4-d9ad-4733-9b24-a65e5adaf39e
app.jwt.expiration.in.ms=360000
## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
spring.datasource.driverClassName=com.mysql.jdbc.Driver
# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update

# Testcase Root Directory
testcases.root=/Users/ranganathvasan/project/learning/testbot/connector-bot/scripts/
#testcases.packagedir=com/example/tests/
#testcases.package=com.example.tests

##testcases.selenium.dependencies=C:/dump/code/dependencies/*
cobot.scriptType=Web

#cmd.exe
cmd.exe=cmd

variable.commandline.exe= cmd.exe

#cobot loadbalancing status on/off. if status on then all scripts will execute on agent machine. if off then all script will execute on cobot server.
cobot.agent.loadbalancing.status = on

#SSM config details
ssmurl =http://localhost:8083/ECM
ssm.username = admin
ssm.password = password

#Number of retry counts
cobot.job.retrycount = 2

parentProperty=//ancestor::li[contains(@class,'dropdown')]

#Agent heartbeat time in minutes
bot.agent.status=3

scripts.store=local
s3.access_key=
s3.secret_key=
cli.scriptType=CLI

cli.errors = ACCESS_DENIED:Access denied for user;NOT_RECOGNIZED_COMMAND:is not recognized as an internal or external command;UNKNOWN_DATABASE:Unknown database

#SendSignal.exe file path
sendSignal.root.dir=C:/cobot/

######OAuth COnfig START###################
#call back URL oauth protected for status update
cobot.status.callback.auth.url=http://localhost:8080/api/job/updatestatusoauth

secclient.oauth2.client.grantType: client_credentials
secclient.oauth2.client.clientId: 0oa5i8reazZPf73Ty4x6
secclient.oauth2.client.clientSecret: P09t3AylXs1hlMBPUOkr_UIqnkBZIbJ-QAhBXK-_
secclient.oauth2.client.accessTokenUri: https://dev-805403.okta.com/oauth2/default/v1/token
secclient.oauth2.client.scope: agent

security.oauth2.client.clientId: 0oa5i8reazZPf73Ty4x6
security.oauth2.client.clientSecret: P09t3AylXs1hlMBPUOkr_UIqnkBZIbJ-QAhBXK-_
security.oauth2.resource.tokenInfoUri: https://dev-805403.okta.com/oauth2/default/v1/introspect
######OAuth Config END###################
testbot.dataparameterzation.multiplerow.allowed=yes

## Password reset
password.reset.url=http://localhost:8080/api/user/completePasswordReset?token=
password.reset.email.subject="Password Reset"
password.reset.email.content="We have received password reset request. Please visit the PASSWORD_RESET_URL to change the password."
password.reset.success.email.subject="Password Reset Successful"
password.reset.success.email.content="Your password has been successfully reset."


## Email sent from
#Add new email id
#from.email.address=noreply@peddledigitals.com

from.email.address=TestBotCrew@gmail.com

## Email related Properties
spring.mail.host=smtp.gmail.com
spring.mail.port=587
#Add new email id and password and enable less scured app to use in email
spring.mail.username=TestBotCrew@gmail.com
spring.mail.password=peddle123
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.socketFactory.port = 465
spring.mail.properties.mail.smtp.socketFactory.class = javax.net.ssl.SSLSocketFactory
spring.mail.properties.mail.smtp.socketFactory.fallback = false
spring.mail.properties.mail.smtp.ssl.enable = true
















